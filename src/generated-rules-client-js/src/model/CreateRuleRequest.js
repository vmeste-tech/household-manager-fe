/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateRuleRequest model module.
 * @module model/CreateRuleRequest
 * @version v0
 */
class CreateRuleRequest {
    /**
     * Constructs a new <code>CreateRuleRequest</code>.
     * @alias module:model/CreateRuleRequest
     * @param name {String} 
     * @param description {String} 
     */
    constructor(name, description) { 
        
        CreateRuleRequest.initialize(this, name, description);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, description) { 
        obj['name'] = name;
        obj['description'] = description;
    }

    /**
     * Constructs a <code>CreateRuleRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateRuleRequest} obj Optional instance to populate.
     * @return {module:model/CreateRuleRequest} The populated <code>CreateRuleRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateRuleRequest();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('penaltyAmount')) {
                obj['penaltyAmount'] = ApiClient.convertToType(data['penaltyAmount'], 'Number');
            }
            if (data.hasOwnProperty('cronExpression')) {
                obj['cronExpression'] = ApiClient.convertToType(data['cronExpression'], 'String');
            }
            if (data.hasOwnProperty('timeZone')) {
                obj['timeZone'] = ApiClient.convertToType(data['timeZone'], 'String');
            }
            if (data.hasOwnProperty('autoCreateTasks')) {
                obj['autoCreateTasks'] = ApiClient.convertToType(data['autoCreateTasks'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateRuleRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateRuleRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateRuleRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['cronExpression'] && !(typeof data['cronExpression'] === 'string' || data['cronExpression'] instanceof String)) {
            throw new Error("Expected the field `cronExpression` to be a primitive type in the JSON string but got " + data['cronExpression']);
        }
        // ensure the json data is a string
        if (data['timeZone'] && !(typeof data['timeZone'] === 'string' || data['timeZone'] instanceof String)) {
            throw new Error("Expected the field `timeZone` to be a primitive type in the JSON string but got " + data['timeZone']);
        }

        return true;
    }


}

CreateRuleRequest.RequiredProperties = ["name", "description"];

/**
 * @member {String} name
 */
CreateRuleRequest.prototype['name'] = undefined;

/**
 * @member {String} description
 */
CreateRuleRequest.prototype['description'] = undefined;

/**
 * @member {Number} penaltyAmount
 */
CreateRuleRequest.prototype['penaltyAmount'] = undefined;

/**
 * @member {String} cronExpression
 */
CreateRuleRequest.prototype['cronExpression'] = undefined;

/**
 * @member {String} timeZone
 */
CreateRuleRequest.prototype['timeZone'] = undefined;

/**
 * @member {Boolean} autoCreateTasks
 */
CreateRuleRequest.prototype['autoCreateTasks'] = undefined;






export default CreateRuleRequest;

